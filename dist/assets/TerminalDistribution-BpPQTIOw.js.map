{"version":3,"file":"TerminalDistribution-BpPQTIOw.js","sources":["../../src/components/TerminalDistribution.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { Chart as ChartJS } from \"chart.js/auto\";\r\nimport { Chart as ChartComponent } from \"react-chartjs-2\";\r\nimport type { ChartData, ChartOptions } from \"chart.js\";\r\nimport { withBase } from \"../theme/chartTheme\";\r\n\r\nexport type Ptiles = { p05?: number | null; p50?: number | null; p95?: number | null };\r\n\r\ntype Props = {\r\n  pathsTerminal?: number[];\r\n  prices?: number[];           // <— alias to match App.tsx usage\r\n  ptiles?: { p05?: number | null; p50?: number | null; p95?: number | null };\r\n  height?: number;\r\n};\r\n\r\nfunction formatMaybe(v?: number | null, d = 2) {\r\n  return Number.isFinite(v as number) ? (v as number).toFixed(d) : \"—\";\r\n}\r\n\r\nexport default function TerminalDistribution({ pathsTerminal, ptiles, height = 300 }: Props) {\r\n  if (!pathsTerminal?.length) {\r\n    return <div className=\"text-xs text-zinc-400\">No terminal data.</div>;\r\n  }\r\n\r\n  // --- Derived stats (memoized) ---\r\n  const derived = useMemo(() => {\r\n    const values = (pathsTerminal && pathsTerminal.length ? pathsTerminal : prices) || [];\r\n    if (!values.length) return <div className=\"text-xs text-zinc-400\">No terminal data.</div>;\r\n    const n = values.length;\r\n    const vMin = values[0];\r\n    const vMax = values[n - 1];\r\n\r\n    // Freedman–Diaconis bin width; clamp bins to [20, 80]\r\n    const q = (p: number) => {\r\n      const idx = (n - 1) * p;\r\n      const lo = Math.floor(idx);\r\n      const hi = Math.ceil(idx);\r\n      const t = idx - lo;\r\n      return values[lo] * (1 - t) + values[hi] * t;\r\n    };\r\n    const q25 = q(0.25);\r\n    const q75 = q(0.75);\r\n    const iqr = Math.max(1e-9, q75 - q25);\r\n    const fdw = (2 * iqr) / Math.cbrt(n);\r\n    const rawBins = Math.max(1, Math.floor((vMax - vMin) / Math.max(fdw, 1e-9)));\r\n    const nBins = Math.max(20, Math.min(80, rawBins || 20));\r\n    const binWidth = (vMax - vMin) / nBins || 1;\r\n\r\n    const counts = new Array(nBins).fill(0);\r\n    for (const v of values) {\r\n      let idx = Math.floor((v - vMin) / binWidth);\r\n      if (idx >= nBins) idx = nBins - 1;\r\n      if (idx < 0) idx = 0;\r\n      counts[idx] += 1;\r\n    }\r\n\r\n    const pdf = counts.map((c) => c / (n * binWidth));\r\n    const cdf: number[] = [];\r\n    let running = 0;\r\n    for (let i = 0; i < nBins; i++) {\r\n      running += counts[i];\r\n      cdf.push(running / n);\r\n    }\r\n\r\n    const mids = Array.from({ length: nBins }, (_, i) => vMin + (i + 0.5) * binWidth);\r\n    const labels = mids.map((x) => x.toFixed(2));\r\n\r\n    return { n, vMin, vMax, nBins, binWidth, labels, pdf, cdf };\r\n  }, [pathsTerminal]);\r\n\r\n  const data: ChartData<\"bar\" | \"line\", number[], string> = {\r\n    labels: derived.labels,\r\n    datasets: [\r\n      {\r\n        type: \"bar\",\r\n        label: \"PDF\",\r\n        data: derived.pdf,\r\n        yAxisID: \"y\",\r\n        borderWidth: 0,\r\n        // Use theme fill (withBase sets defaults); keep as semi-opaque fill via scriptable background\r\n        backgroundColor: (ctx) => {\r\n          const c = ctx.chart?.options?.color as string | undefined;\r\n          // fallback tint if theme color not present\r\n          return c ? `${c}55` : \"rgba(148,163,184,0.45)\"; // zinc-400-ish\r\n        },\r\n        barPercentage: 1.0,\r\n        categoryPercentage: 1.0,\r\n      },\r\n      {\r\n        type: \"line\",\r\n        label: \"CDF\",\r\n        data: derived.cdf,\r\n        yAxisID: \"y1\",\r\n        borderWidth: 2,\r\n        pointRadius: 0,\r\n        tension: 0.15,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options: ChartOptions<\"bar\" | \"line\"> = withBase<ChartOptions<\"bar\" | \"line\">>({\r\n    maintainAspectRatio: false,\r\n    interaction: { mode: \"index\", intersect: false },\r\n    plugins: {\r\n      legend: { display: false },\r\n      tooltip: {\r\n        callbacks: {\r\n          title: (items) => `Price ~ ${items[0]?.label ?? \"\"}`,\r\n          label: (item) =>\r\n            item.dataset.type === \"line\"\r\n              ? `CDF: ${(Number(item.raw) * 100).toFixed(1)}%`\r\n              : `PDF: ${Number(item.raw).toFixed(4)}`,\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        ticks: { maxRotation: 0, autoSkip: true },\r\n        title: { display: true, text: \"Price\" },\r\n        grid: { display: false },\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n        title: { display: true, text: \"PDF\" },\r\n        grid: { display: true },\r\n      },\r\n      y1: {\r\n        beginAtZero: true,\r\n        max: 1,\r\n        position: \"right\",\r\n        title: { display: true, text: \"CDF\" },\r\n        ticks: { callback: (v) => `${(Number(v) * 100).toFixed(0)}%` },\r\n        grid: { display: false },\r\n      },\r\n    },\r\n  });\r\n\r\n  // Inline plugin to draw p05/p50/p95 vertical guides without extra deps\r\n  const percentileLines = {\r\n    id: \"percentileLines\",\r\n    afterDatasetsDraw: (chart: ChartJS) => {\r\n      const ctx = chart.ctx as CanvasRenderingContext2D;\r\n      const xScale = chart.scales.x;\r\n      const area = chart.chartArea;\r\n      const { vMin, binWidth, nBins } = derived;\r\n\r\n      const drawLine = (val: number, label: string, strong = false) => {\r\n        if (!Number.isFinite(val)) return;\r\n        const idxFloat = (val - vMin) / binWidth - 0.5; // map to category index space\r\n        const i0 = Math.max(0, Math.min(nBins - 1, Math.floor(idxFloat)));\r\n        const i1 = Math.max(0, Math.min(nBins - 1, Math.ceil(idxFloat)));\r\n        const t = Math.max(0, Math.min(1, idxFloat - Math.floor(idxFloat)));\r\n        const x0 = xScale.getPixelForValue(i0);\r\n        const x1 = xScale.getPixelForValue(i1);\r\n        const x = x0 + (x1 - x0) * t;\r\n\r\n        ctx.save();\r\n        ctx.beginPath();\r\n        ctx.setLineDash(strong ? [] : [4, 4]);\r\n        ctx.lineWidth = strong ? 1.5 : 1;\r\n        ctx.strokeStyle = \"rgba(255,255,255,0.35)\";\r\n        ctx.moveTo(x, area.top);\r\n        ctx.lineTo(x, area.bottom);\r\n        ctx.stroke();\r\n        ctx.setLineDash([]);\r\n        ctx.font = \"10px ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto\";\r\n        ctx.fillStyle = \"rgba(255,255,255,0.7)\";\r\n        ctx.textAlign = \"left\";\r\n        ctx.fillText(`${label} ${formatMaybe(val)}`, x + 4, area.top + 10);\r\n        ctx.restore();\r\n      };\r\n\r\n      if (ptiles?.p05 != null) drawLine(ptiles.p05, \"p05\");\r\n      if (ptiles?.p50 != null) drawLine(ptiles.p50, \"p50\", true);\r\n      if (ptiles?.p95 != null) drawLine(ptiles.p95, \"p95\");\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative w-full\" style={{ height }}>\r\n      <ChartComponent type=\"bar\" data={data} options={options} plugins={[percentileLines]} />\r\n      <div className=\"mt-2 grid grid-cols-3 gap-2 text-[11px] opacity-80\">\r\n        <div>p05: {formatMaybe(ptiles?.p05)}</div>\r\n        <div>p50: {formatMaybe(ptiles?.p50)}</div>\r\n        <div>p95: {formatMaybe(ptiles?.p95)}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["formatMaybe","v","d","TerminalDistribution","pathsTerminal","ptiles","height","jsx","derived","useMemo","values","n","vMin","vMax","q","p","idx","lo","hi","t","q25","q75","fdw","rawBins","nBins","binWidth","counts","pdf","c","cdf","running","i","labels","_","x","data","ctx","_b","_a","options","withBase","items","item","percentileLines","chart","xScale","area","drawLine","val","label","strong","idxFloat","i0","i1","x0","x1","ChartComponent","jsxs"],"mappings":"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"}