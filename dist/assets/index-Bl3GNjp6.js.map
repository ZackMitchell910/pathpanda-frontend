{"version":3,"file":"index-Bl3GNjp6.js","sources":["../../node_modules/react-chartjs-2/dist/index.js"],"sourcesContent":["import React, { forwardRef, useRef, useEffect } from 'react';\nimport { Chart as Chart$1, LineController, BarController, RadarController, DoughnutController, PolarAreaController, BubbleController, PieController, ScatterController } from 'chart.js';\n\nconst defaultDatasetIdKey = 'label';\nfunction reforwardRef(ref, value) {\n    if (typeof ref === 'function') {\n        ref(value);\n    } else if (ref) {\n        ref.current = value;\n    }\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets) {\n    let datasetIdKey = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : defaultDatasetIdKey;\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data) {\n    let datasetIdKey = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : defaultDatasetIdKey;\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'dataset', {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'nearest', {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event.nativeEvent, 'index', {\n        intersect: true\n    }, false);\n}\n\nfunction ChartComponent(props, ref) {\n    const { height = 150, width = 300, redraw = false, datasetIdKey, type, data, options, plugins = [], fallbackContent, updateMode, ...canvasProps } = props;\n    const canvasRef = useRef(null);\n    const chartRef = useRef(null);\n    const renderChart = ()=>{\n        if (!canvasRef.current) return;\n        chartRef.current = new Chart$1(canvasRef.current, {\n            type,\n            data: cloneData(data, datasetIdKey),\n            options: options && {\n                ...options\n            },\n            plugins\n        });\n        reforwardRef(ref, chartRef.current);\n    };\n    const destroyChart = ()=>{\n        reforwardRef(ref, null);\n        if (chartRef.current) {\n            chartRef.current.destroy();\n            chartRef.current = null;\n        }\n    };\n    useEffect(()=>{\n        if (!redraw && chartRef.current && options) {\n            setOptions(chartRef.current, options);\n        }\n    }, [\n        redraw,\n        options\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current) {\n            setLabels(chartRef.current.config.data, data.labels);\n        }\n    }, [\n        redraw,\n        data.labels\n    ]);\n    useEffect(()=>{\n        if (!redraw && chartRef.current && data.datasets) {\n            setDatasets(chartRef.current.config.data, data.datasets, datasetIdKey);\n        }\n    }, [\n        redraw,\n        data.datasets\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        if (redraw) {\n            destroyChart();\n            setTimeout(renderChart);\n        } else {\n            chartRef.current.update(updateMode);\n        }\n    }, [\n        redraw,\n        options,\n        data.labels,\n        data.datasets,\n        updateMode\n    ]);\n    useEffect(()=>{\n        if (!chartRef.current) return;\n        destroyChart();\n        setTimeout(renderChart);\n    }, [\n        type\n    ]);\n    useEffect(()=>{\n        renderChart();\n        return ()=>destroyChart();\n    }, []);\n    return /*#__PURE__*/ React.createElement(\"canvas\", {\n        ref: canvasRef,\n        role: \"img\",\n        height: height,\n        width: width,\n        ...canvasProps\n    }, fallbackContent);\n}\nconst Chart = /*#__PURE__*/ forwardRef(ChartComponent);\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return /*#__PURE__*/ forwardRef((props, ref)=>/*#__PURE__*/ React.createElement(Chart, {\n            ...props,\n            ref: ref,\n            type: type\n        }));\n}\nconst Line = /* #__PURE__ */ createTypedChart('line', LineController);\nconst Bar = /* #__PURE__ */ createTypedChart('bar', BarController);\nconst Radar = /* #__PURE__ */ createTypedChart('radar', RadarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart('doughnut', DoughnutController);\nconst PolarArea = /* #__PURE__ */ createTypedChart('polarArea', PolarAreaController);\nconst Bubble = /* #__PURE__ */ createTypedChart('bubble', BubbleController);\nconst Pie = /* #__PURE__ */ createTypedChart('pie', PieController);\nconst Scatter = /* #__PURE__ */ createTypedChart('scatter', ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["defaultDatasetIdKey","reforwardRef","ref","value","setOptions","chart","nextOptions","options","setLabels","currentData","nextLabels","setDatasets","nextDatasets","datasetIdKey","addedDatasets","nextDataset","currentDataset","dataset","cloneData","data","nextData","ChartComponent","props","height","width","redraw","type","plugins","fallbackContent","updateMode","canvasProps","canvasRef","useRef","chartRef","renderChart","Chart$1","destroyChart","useEffect","React","Chart","forwardRef","createTypedChart","registerables","Line","LineController","Bar","BarController"],"mappings":"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","x_google_ignoreList":[0]}